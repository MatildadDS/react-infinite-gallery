{"version":3,"sources":["Components/InfiniteScroll/InfiniteScroll.jsx","App.js","index.js"],"names":["InfiniteScroll","useState","dataImg","setDataImg","pageIndex","setPageIndex","searchState","setSearchState","firstCall","setFirstCall","useEffect","fetch","then","response","json","data","imgsReceived","results","forEach","img","push","urls","regular","newFreshState","index","i","j","inpRef","useRef","window","addEventListener","infiniteCheck","removeEventListener","document","documentElement","scrollTop","scrollHeight","clientHeight","className","onSubmit","e","preventDefault","current","value","htmlFor","type","id","ref","map","src","alt","uuidv4","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PAIe,SAASA,IAGpB,MAA8BC,mBAAS,CAAC,GAAI,GAAG,KAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,UAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAiCN,oBAAS,GAA1C,mBAAMO,EAAN,KAAiBC,EAAjB,KAqEAC,qBAAU,WACHF,GAjCHG,MAAM,+CAAD,OAAgDP,EAAhD,8BAA+EE,EAA/E,2DACJM,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAEH,IAAMC,EAAe,GAErBD,EAAKE,QAAQC,SAAQ,SAACC,GAClBH,EAAaI,KAAKD,EAAIE,KAAKC,YAU/B,IAPA,IAAMC,EAAe,CACjB,GACA,GACA,IAGAC,EAAQ,EACJC,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBH,EAAcE,GAAGL,KAAKJ,EAAaQ,IACnCA,IAIRrB,EAAWoB,QAUhB,CAACjB,IAGJI,qBAAU,WAxENC,MAAM,+CAAD,OAAgDP,EAAhD,8BAA+EE,EAA/E,2DACJM,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAEH,IAAMC,EAAe,GAErBD,EAAKE,QAAQC,SAAQ,SAACC,GAClBH,EAAaI,KAAKD,EAAIE,KAAKC,YAU/B,IAPA,IAAMC,EAAe,CAAC,YACdrB,EAAQ,IADK,YAEbA,EAAQ,IAFK,YAGbA,EAAQ,KAGZsB,EAAQ,EACJC,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBH,EAAcE,GAAGL,KAAKJ,EAAaQ,IACnCA,IAIRrB,EAAWoB,GACXd,GAAa,QAiDlB,CAACL,IAEJ,IAOMuB,EAASC,mBAEflB,qBAAU,WAGN,OAFAmB,OAAOC,iBAAiB,SAAUC,GAE3B,WACHF,OAAOG,oBAAoB,SAAUD,MAE1C,IAEH,IAAMA,EAAgB,WAGlB,MAAgDE,SAASC,gBAAlDC,EAAP,EAAOA,UAAP,EAAkBC,aAEAD,IAFlB,EAAgCE,cAI5BhC,GAAa,SAAAD,GAAS,OAAIA,EAAY,MAI9C,OACI,sBAAKkC,UAAU,YAAf,UACI,uBAAMC,SA9BO,SAAAC,GACjBA,EAAEC,iBAEFlC,EAAeoB,EAAOe,QAAQC,OAC9BtC,EAAa,IA0BT,UACI,uBAAOuC,QAAQ,SAAf,2BACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKpB,OAExC,sBAAKW,UAAU,YAAf,UACI,8BACKpC,EAAQ,GAAG8C,KAAI,SAAA7B,GACZ,OAAO,qBAAoB8B,IAAK9B,EAAK+B,IAAI,mBAAxBC,oBAGzB,8BACCjD,EAAQ,GAAG8C,KAAI,SAAA7B,GACR,OAAO,qBAAoB8B,IAAK9B,EAAK+B,IAAI,mBAAxBC,oBAGzB,8BACCjD,EAAQ,GAAG8C,KAAI,SAAA7B,GACR,OAAO,qBAAoB8B,IAAK9B,EAAK+B,IAAI,mBAAxBC,0BCjI1BC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.cb2316c7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef}from 'react'\nimport './InfiniteScroll.css'\nimport {v4 as uuidv4} from 'uuid'\n\nexport default function InfiniteScroll() {\n\n    {/*image stockpile + infinite scroll down + research */}\n    const [dataImg, setDataImg] = useState([[], [],[]]) \n    const [pageIndex, setPageIndex] = useState(1)\n    const [searchState, setSearchState] = useState('random')\n    const[firstCall, setFirstCall] = useState(true)\n\n    const infiniteFetchData = () => {\n\n        fetch(`https://api.unsplash.com/search/photos?page=${pageIndex}&per_page=30&query=${searchState}&client_id=uQZqRt9wXrpoSLoTXvPsxnkMn31QNRmSbsu2V8_acnM`)\n        .then((response) => {\n            return response.json()\n        })\n        .then((data) => {\n\n            const imgsReceived = [];\n\n            data.results.forEach((img) => {\n                imgsReceived.push(img.urls.regular)\n            })\n\n            const newFreshState =[\n                [...dataImg[0]],\n                [...dataImg[1]],\n                [...dataImg[2]],\n            ]\n\n            let index = 0;\n            for(let i = 0; i < 3; i++){\n                for(let j = 0; j < 10; j++){\n                    newFreshState[i].push(imgsReceived[index])\n                    index++;\n                }\n            }\n\n            setDataImg(newFreshState)\n            setFirstCall(false)\n        })\n    }\n\n    const searchFetchData = () => {\n\n        fetch(`https://api.unsplash.com/search/photos?page=${pageIndex}&per_page=30&query=${searchState}&client_id=uQZqRt9wXrpoSLoTXvPsxnkMn31QNRmSbsu2V8_acnM`)\n        .then((response) => {\n            return response.json()\n        })\n        .then((data) => {\n\n            const imgsReceived = [];\n\n            data.results.forEach((img) => {\n                imgsReceived.push(img.urls.regular)\n            })\n\n            const newFreshState =[\n                [],\n                [],\n                [],\n            ]\n\n            let index = 0;\n            for(let i = 0; i < 3; i++){\n                for(let j = 0; j < 10; j++){\n                    newFreshState[i].push(imgsReceived[index])\n                    index++;\n                }\n            }\n\n            setDataImg(newFreshState)\n        })\n    }\n    {/*console.log(dataImg);*/}\n\n\n    useEffect(() => {\n        if(firstCall) return;\n        searchFetchData();\n\n    }, [searchState])\n\n\n    useEffect(() => {\n\n        infiniteFetchData();\n        \n    }, [pageIndex])\n \n    const handleSearch = e => {\n        e.preventDefault()\n\n        setSearchState(inpRef.current.value)\n        setPageIndex(1)\n    }\n\n    const inpRef = useRef()\n\n    useEffect(() => {\n        window.addEventListener('scroll', infiniteCheck);\n\n        return () => {\n            window.removeEventListener('scroll', infiniteCheck)\n        }\n    }, [])\n\n    const infiniteCheck = () => {\n\n        {/*console.log('HELLO CHECK!')*/}\n        const {scrollTop, scrollHeight, clientHeight} = document.documentElement;\n\n        if(scrollHeight - scrollTop === clientHeight) {\n            {/*console.log('BOTTOM!')*/}\n            setPageIndex(pageIndex => pageIndex + 1)\n        }\n    }\n\n    return (\n        <div className='container'>\n            <form onSubmit={handleSearch}>\n                <label htmlFor=\"search\">Your research</label>\n                <input type=\"text\" id=\"search\" ref={inpRef}/>\n            </form>\n            <div className=\"card-list\">\n                <div>\n                    {dataImg[0].map(img => {\n                        return <img key={uuidv4()} src={img} alt=\"unsplash images\"/>\n                    })}\n                </div>\n                <div>\n                {dataImg[1].map(img => {\n                        return <img key={uuidv4()} src={img} alt=\"unsplash images\"/>\n                    })}\n                </div>\n                <div>\n                {dataImg[2].map(img => {\n                        return <img key={uuidv4()} src={img} alt=\"unsplash images\"/>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import InfiniteScroll from './Components/InfiniteScroll/InfiniteScroll'\n\nfunction App() {\n  return (\n    <div>\n      <InfiniteScroll />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}